// Generated by CoffeeScript 1.6.3
(function() {
  var delayedScrollElements, isVisible, offsetTop, pictureTime, scrollHandler;

  delayedScrollElements = {};

  pictureTime = function() {
    var correctSrc, deviceRatio, frag, hasDelayedPictures, id, img, matches, media, pic, picImg, picText, pictures, postpone, resMatch, sAttr, scrollElement, sources, src, srcSets, srcs, _i, _j, _k, _len, _len1, _len2, _results;
    pictures = document.getElementsByTagName("picture");
    deviceRatio = window.devicePixelRatio || 1;
    hasDelayedPictures = false;
    for (id in delayedScrollElements) {
      if (id === "window") {
        window.removeEventListener("scroll", scrollHandler);
      } else {
        delayedScrollElements[id].element.removeEventListener("scroll", scrollHandler);
      }
    }
    delayedScrollElements = {};
    for (_i = 0, _len = pictures.length; _i < _len; _i++) {
      pic = pictures[_i];
      matches = [];
      sources = pic.getElementsByTagName("source");
      if (pic.innerHTML === "") {
        if ((img = pic.getElementsByTagName("img")[0]) && (src = img.getAttribute("data-src"))) {
          img.setAttribute("src", src);
        }
        return null;
      }
      postpone = pic.getAttribute("postpone");
      if (typeof postpone === "string" && postpone !== "false") {
        if (hasDelayedPictures !== true) {
          hasDelayedPictures = true;
        }
        if (pic.getAttribute("data-scroll-element")) {
          scrollElement = document.querySelector(pic.getAttribute("data-scroll-element"));
          if (!(id = scrollElement.getAttribute("data-id"))) {
            scrollElement.setAttribute("data-id", id = new Date().getTime());
          }
        } else {
          scrollElement = window;
          id = "window";
        }
        if (delayedScrollElements[id]) {
          delayedScrollElements[id].push(pic);
        } else {
          delayedScrollElements[id] = [pic];
          delayedScrollElements[id].element = scrollElement;
        }
      } else {
        if (!sources.length) {
          picText = pic.innerHTML;
          frag = document.createElement("div");
          srcs = picText.replace(/(<)source([^>]+>)/gmi, "$1div$2").match(/<div[^>]+>/gmi);
          frag.innerHTML = srcs.join("");
          sources = frag.getElementsByTagName("div");
        }
        for (_j = 0, _len1 = sources.length; _j < _len1; _j++) {
          sAttr = sources[_j];
          media = sAttr.getAttribute("media");
          if (!media || window.matchMedia && window.matchMedia(media).matches) {
            matches.push(sAttr);
            break;
          }
        }
        picImg = pic.getElementsByTagName("img")[0];
        if (matches.length !== 0) {
          if (!picImg) {
            picImg = document.createElement("img");
            picImg.alt = pic.getAttribute("alt");
            pic.appendChild(picImg);
          }
          srcSets = matches.pop().getAttribute("srcset");
          if (deviceRatio && srcSets.indexOf(" 2x") !== -1) {
            srcSets = srcSets.split(",");
            for (_k = 0, _len2 = srcSets.length; _k < _len2; _k++) {
              src = srcSets[_k];
              src = src.replace(/^\s*/, '').replace(/\s*$/, '').split(" ");
              resMatch = parseFloat(src[1], 10);
              if (deviceRatio === resMatch) {
                correctSrc = src[0];
                break;
              }
            }
          } else {
            correctSrc = srcSets;
          }
          picImg.src = correctSrc;
        } else if (picImg) {
          pic.removeChild(picImg);
        }
      }
    }
    _results = [];
    for (id in delayedScrollElements) {
      if (id === "window") {
        _results.push(window.addEventListener("scroll", scrollHandler));
      } else {
        _results.push(delayedScrollElements[id].element.addEventListener("scroll", scrollHandler));
      }
    }
    return _results;
  };

  scrollHandler = function(e) {
    var pic, pictures, scrollElement, scrolledIntoView, _i, _len;
    scrollElement = e.srcElement;
    pictures = delayedScrollElements[scrollElement === window.document ? "window" : scrollElement.getAttribute("data-id")];
    scrolledIntoView = false;
    for (_i = 0, _len = pictures.length; _i < _len; _i++) {
      pic = pictures[_i];
      if (isVisible(pic, scrollElement)) {
        pic.removeAttribute("postpone");
        scrolledIntoView = true;
      }
    }
    if (scrolledIntoView) {
      return pictureTime();
    }
  };

  offsetTop = function(el) {
    var o, temp;
    temp = el;
    o = temp.offsetTop || 0;
    while ((temp = temp.offsetParent) && temp.tagName.toLowerCase() !== "body") {
      o += temp.offsetTop;
    }
    return o;
  };

  isVisible = function(el, scrollElement) {
    var scrollHeight, top, viewPortHeight;
    viewPortHeight = document.documentElement.clientHeight;
    top = offsetTop(el);
    scrollHeight = scrollElement.scrollTop + offsetTop(scrollElement);
    return viewPortHeight + scrollHeight >= top;
  };

  if (window.addEventListener) {
    window.addEventListener("resize", pictureTime, false);
    window.addEventListener("DOMContentLoaded", function() {
      pictureTime();
      return window.removeEventListener("load", pictureTime, false);
    }, false);
    window.addEventListener("load", pictureTime, false);
  } else {
    window.attachEvent("onload", pictureTime);
  }

  if (typeof define === 'function') {
    define(function() {
      return pictureTime;
    });
  }

  pictureTime();

}).call(this);
